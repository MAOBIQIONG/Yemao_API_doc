//订单流程

1.雇主发布订单
    资源定位：
        releaseAnOrder
    交互方式：
        post
    请求参数：
        {
            user_id:"用户id",
            project_type:"项目类型",
            project_region:"项目地区",
            project_title:"项目标题",
            project_describe:"项目描述",
            project_budget:"预算",
            order_deadLine:"抢单截止时间",
            design_unit:"设计单位（个）",
            design_area:"设计面积（平米）（与上面设计单位二选一）",
            design_depth:"设计深度（方案，扩出，施工，三选一）",
            design_workingHours:"工时",
            design_startStopTime:"设计起止时间例如2017-01-02/2017-02-02",
            project_pictures:"上传图片（限制9张）"
        }
    返回参数：
        {
            code:"状态值",
            msg:"返回消息"
        }

2.雇主任务大厅订单列表
    资源定位：
        getOrderListEemployerHall
    交互方式：
        get
    请求参数：
        //sort:1  最新发布
        {
            project_type:"项目类型(设计师注册时设计类型)"
            sort:"排序状态"
        }
    返回参数
        orderList

3.首页订单列表
    资源定位：
        getOrderListIndex
    交互方式：
        get
    请求参数：
        //sort:1  最新发布
        {
            sort:"排序状态"
        }
    返回参数：
        orderList

4.订单详情
    资源定位：
        getOrderListDetails
    交互方式：
        get
    请求参数：
        {
            order_id:"订单id"
        }
    返回参数：
        {
            employer_id:"雇主id",
            employer_name:"雇主姓名",
            project_picture:["imageUrl",...],
            project_describe:"项目描述",
            project_type:"项目类型",
            project_region:"项目地区",
            project_title:"项目标题",    
            budget:"预算",
            order_deadline:"抢单截止时间",
            design_unit:"设计单位（个）",
            design_area:"设计面积（平米）（与上面设计单位二选一）",
            design_depth:"设计深度（方案，扩出，施工，三选一）",
            design_workingHours:"工时",
            design_start_stop_time:"设计起止时间例如2017-01-02/2017-02-02",
            trading_state:"交易状态",
            competite_state:"抢单状态0抢单中1已被抢",
            order_competitor:[
                {
                    competed_time:"抢单时间"
                    user_name:"用户姓名",
                    user_dd:"用户id",
                    head_sculpture:"头像",
                    scheme_explains:"方案说明",
                    quotation:"设计师报价",
                    task_time:"任务时长",
                    competite_sucess_state:"抢单是否成功1成功-1不成功"
                },
                ...
            ]
        }

5.雇主订单列表
    资源定位：
        getOrderListEmployer
    交互方式：
        get
    请求参数：
        //trading_state:
            1待处理
            2待完善
            3完善中
            4已完善
            5待支付
            6代交付
            7已交付
            8已完成
        //user_type:
            1雇主
        {
            user_id:"用户id",
            trading_state:"交易状态",
            user_type:"用户类型"
        }
    返回参数：
        orderList

6.设计师填写抢单信息
    资源定位：
        competiteAnOrder
    交互方式：
        post
    请求参数：
        {
            user_id:"用户id"
            quotation:"我的报价",
            taskTime:"任务时长",
            schemeExplains:"方案说明"
        }
    请求操作：
        1.将该设计师加入该订单的选择设计师列表
        2.将该订单信息加入该设计师待处理订单列表
    返回参数：
        {
            code:"状态值",
            msg:"返回消息"
        }

7.设计师订单列表
    资源定位：
        getOrderListDesigner
    交互方式：
        get
    请求参数：
        //trading_state:
            1待处理
            2待完善
            3完善中
            4已完善
            5待支付
            6代交付
            7已交付
            8已完成
        //user_type:2设计师
        {
            user_id:"用户id",
            trading_state:"交易状态",
            user_type:"用户类型"
        }
    返回参数：
        orderList

8.选择设计师列表
    资源定位：
        getListOfDesignerChoosing
    交互方式：
        get
    请求参数：
        {
            user_id:"用户id",
            order_id:"订单id"
        }
    返回参数：
        {
            order_competitor:[
                {
                    competedTime:"抢单时间"
                    designer_name:"设计师姓名",
                    designer_id:"设计师id",
                    headSculpture:"设计师头像",
                    schemeExplains:"方案说明",
                    quotation:"设计师报价",
                    taskTime:"任务时长",
                    competite_sucess_state:"抢单是否成功1成功-1不成功"
                },
                ...
            ]
        }

9.选择设计师
    资源定位：
        chooseDesigner
    交互方式：
        post
    请求参数：
        {
            order_id:"订单id"
        }
    请求操作：
        1.更新订单"抢单状态"competite_state置为0 （已被抢）
        2.更新订单"交易状态"trading_state置为2（待完善）
    返回参数：
        {
            code:"状态值",
            msg:"返回消息"
        }

10.雇主要求完善订单
    资源定位：
        request_order_improving
    交互方式：
        get
    请求参数：
        {
            order_id:"订单编号"
        }
    请求操作：
        1.更新订单"交易状态"trading_state置为3（完善中）
    返回参数：
        {
            code:"状态值",
            msg:"返回消息"
        }

11.设计师请求完善订单详情
    资源定位：
        get_improving_order_detail
    交互方式：
        get
    请求参数：
        {
            order_id:"订单编号"
        }
    返回参数：
        {
            project_title:"项目标题",
            projectDetail:"项目内容",
            budget:"预算",
            rush_end_time:"抢单截止时间",
            design_unit:"设计单位",
            design_area:"设计面积",
            number:"个数",
            design_deep:"设计深度",
            working_hour:"工时",
            design_start_end_time:"设计起始时间"
        }   

12.设计师完善订单
    资源定位：
        improve_order
    交互方式：
        post
    请求参数：
        {
            project_title:"项目标题",
            projectDetail:"项目内容",
            budget:"预算",
            rush_end_time:"抢单截止时间",
            design_unit:"设计单位",
            design_area:"设计面积",
            number:"个数",
            design_deep:"设计深度",
            working_hour:"工时",
            design_start_end_time:"设计起始时间"
        }
    请求操作：
        1.更新订单信息
        2.更新订单"交易状态"trading_state置为4（已完善）
    返回参数：
        {
            code:"-1",
            message:"errorMessage"
        }

13雇主最终确认订单
    资源定位：
        payOrder
    请求参数：
        {
            order_id:"订单id"
        }
    请求操作：
        更新订单"交易状态"trading_state置为5（待支付）
    返回参数：
        {
            code:"状态值",
            msg:"返回消息"
        }    

14.支付
    资源定位：
        payOrder
    请求参数：
        {
            order_id:"订单id"，
            user_id:"用户id",
        }
    请求操作：
        如果付款成功，将传trading_state置为6（待交付）
    返回参数：
        {
            code："状态值",
            msg:"返回消息"
        }

15.一键会审
    资源定位：
        review
    请求参数：
        {
            user_phone:"手机号",
            review_message:"会审信息",
            user_id:"用户id",
            order_id:"订单编号"
        }
    请求操作：
        更新订单"交易状态"trading_state置为9（审核中）
    返回参数：
        {
            code:"状态值",
            msg:"返回消息"
        }

16.提交设计
    资源定位：
        submitDesign
    请求参数：
        {
            order_id:"订单id",
            user_id:"用户id",
        }
    请求操作：
        更新订单"交易状态"trading_state置为7（已交付）
    返回参数：
        {
            code:"状态值",
            msg:"返回消息"
        }

17.雇主确认提交
    资源定位：
        submitDesign
    请求参数：
        {
            order_id:"订单id",
            user_id:"用户id",
        }
    请求操作：
        更新订单"交易状态"trading_state置为8（已完成）
    返回参数：
        {
            code:"状态值",
            msg:"返回消息"
        }

18.评价设计师
    资源定位：
        appraiseDesigner
    请求参数：
        {
            designer_id:"设计师id",
            user_id:"雇主用户id",
            degree_drawing:"图纸满意度",
            degree_progress:"进度满意度",
            degree_attitude:"态度满意度",
            content:"评价文字"
        }
    返回参数：
        {
            code:"状态值",
            msg:"返回消息"
        }





